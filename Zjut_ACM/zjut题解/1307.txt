#include<iostream>
using namespace std;
struct node
{
    unsigned char val;
    short next;
}s[10001];
int ind;
short p[201];
bool q[201];
void back(int x)
{
    q[x]=1;
    for(int i=p[x];i!=-1;i=s[i].next)
    {
        if(!q[s[i].val])
            back(s[i].val);
    }
}
int DFS(int m)
{
    int g=-1;
    memset(q,0,sizeof(q));
    for(int i=1;i<=m;i++)
    {
        if(q[i])continue;
        back(i);
        g++;
    }
    return g;
}
int main()
{
    int m,n;
    while(scanf("%d%d",&m,&n) &&(m||n))
    {
        ind=0;
        memset(p,-1,sizeof(p));
        int x,y;
        for(int i=0;i<n;i++)
        {
            scanf("%d%d",&x,&y);
            s[ind].next=p[x];
            s[ind].val=y;
            p[x]=ind;
            ind++;
            s[ind].next=p[y];
            s[ind].val=x;
            p[y]=ind;
            ind++;
        }
        cout<<DFS(m)<<endl;
    }
}
