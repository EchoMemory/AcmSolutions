#include<iostream>
#include<string>
#include<vector>
using namespace std;
class big
{
public :
	int sign;
	string s;
	bool operator <(big a)const{return (s.length()!=a.s.length())?(s.length()<a.s.length()):s<a.s;}
	friend big operator +(big a,big b)
	{
		if(big(a.s)<big(b.s))
		{
			return b+a;
		}
		int sig;
		if(b.sign==a.sign)
		{	
			sig=a.sign;
			
			int jin=0;
			for(int i=1;i<=b.s.length();i++)
			{
				jin=(a.s[a.s.length()-i]-'0')+(b.s[b.s.length()-i]-'0')+jin;
				a.s[a.s.length()-i]=jin%10+'0';
				jin/=10;
			}
			for(int i=b.s.length()+1;i<=a.s.length();i++)
			{
				jin=(a.s[a.s.length()-i]-'0')+jin;
				a.s[a.s.length()-i]=jin%10+'0';
				jin/=10;
				if(jin==0)
					break;
			}
			if(jin)
				a.s="1"+a.s;
			if(sig==1)
				return big(a.s);
			else
				return big("-"+a.s);

		}
		else
		{
			if(b.s==a.s)
				return big("0");
			int jin=0;
			for(int i=1;i<=b.s.length();i++)
			{
				if(a.s[a.s.length()-i]>=(b.s[b.s.length()-i])+jin)
				{
					a.s[a.s.length()-i]=a.s[a.s.length()-i]-b.s[b.s.length()-i]-jin+'0';
					jin=0;
				}
				else
				{
					a.s[a.s.length()-i]=a.s[a.s.length()-i]+10-b.s[b.s.length()-i]-jin+'0';
					jin=1;
				}
			}
			if(jin)
			for(int i=b.s.length()+1;i<=a.s.length();i++)
			{
				if(a.s[a.s.length()-i]>='1')
				{
					a.s[a.s.length()-i]=a.s[a.s.length()-i]-1;
					jin=0;
					break;
				}
				else
				{
					a.s[a.s.length()-i]='9';
				}
			}
			int index=0;
			for(int i=0;i<a.s.length();i++)
				if(a.s[i]!='0')
				{
					index=i;
					break;
				}
				a.s=a.s.substr(index,a.s.length()-index);
			if(a.sign==1)
				return big(a.s);
			else
				return big("-"+a.s);

		}
	}
	big(){}
	big(string x)
	{
		if(x[0]!='-')
		{
			s=x;
			sign=1;
		}
		else
		{
			s=x.substr(1,s.length()-1);
			sign=0;
		}
	}
};
int main()
{
	int m;
	while(cin>>m && m)
	{
		string s;
		cin>>s;
		big sum(s);
		for(int i=1;i<m;i++)
		{
			cin>>s;
			sum=sum+big(s);
		}
		if(sum.sign)
			cout<<sum.s<<endl;
		else
			cout<<"-"<<sum.s<<endl;
	}


}
